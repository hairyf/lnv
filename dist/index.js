#!/usr/bin/env node
var q=Object.create;var v=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var Y=Object.getOwnPropertyNames;var A=Object.getPrototypeOf,F=Object.prototype.hasOwnProperty;var V=(e,n,r,s)=>{if(n&&typeof n=="object"||typeof n=="function")for(let i of Y(n))!F.call(e,i)&&i!==r&&v(e,i,{get:()=>n[i],enumerable:!(s=I(n,i))||s.enumerable});return e};var u=(e,n,r)=>(r=e!=null?q(A(e)):{},V(n||!e||!e.__esModule?v(r,"default",{value:e,enumerable:!0}):r,e));var l=u(require("pathe")),g=u(require("fs")),f=require("dotenv"),w=require("@manypkg/get-packages"),x=require("child_process");var a={wait_stacks:[],...console,wait(...e){this.wait_stacks.push(...e)},don(...e){e.length&&console.log(...e),this.wait_stacks.forEach(n=>console.log(n)),this.wait_stacks=[]}};var p=process.cwd();async function E(e,n={}){if(!e){y(`${p}/.env`,n);return}let{packages:r,root:s}=await(0,w.getPackages)(process.cwd());s.dir!==p&&a.warn("Subproject exposes environment. If is correct, ignore this message.");for(let i of r.filter(o=>o.dir!==p))a.wait(` - ${l.default.relative(p,i.dir)}/.env`),y(`${i.dir}/.env`,n)}async function b(e,n){if(Array.isArray(e)&&(e=e.join(" ")),!e)throw new Error("Unable to run empty running script");let r={stdio:"inherit",env:{...process.env,...n}};try{let{execaSync:s}=await import("execa");s(e,r)}catch{(0,x.execSync)(e,r)}}function k(e){e="."+e;let n=T(e);if(!n)return;if(e!==".env.vault")return(0,f.config)({path:n,processEnv:{}});let r=h(".env.key")||process.env.DOTENV_KEY||h(".env");if(!r)throw new Error("no DOTENV_KEY found in .env | .env.key or process.env");return(0,f.config)({DOTENV_KEY:r,path:n})}function T(e){let n=p;for(;n!==l.default.parse(n).root;){let r=l.default.join(n,e);if(g.default.existsSync(r))return r;n=l.default.dirname(n)}}function j(e){return[...new Set([...e])]}function O(e){return e!=="env"?e==="dotenv"?"env.vault":`env.${e}`:e}function h(e){return(0,f.config)({processEnv:{},path:T(e)}).parsed?.DOTENV_KEY}function y(e,n={}){let s=["# This file is generated by lnv command","# DO NOT ATTEMPT TO EDIT THIS FILE",Object.entries(n).map(([i,o])=>`${i}=${o}`).join(`
`)].join(`
`);g.default.writeFileSync(e,s,"utf-8")}function $(e){let n=[],r="",s=!1,i="";for(let o of e)o.startsWith("'")||o.startsWith("`")?s?r+=" "+o.slice(1):(s=!0,i=o[0],r+=o.slice(1)):o.endsWith("'")||o.endsWith("`")?s&&i===o[o.length-1]?(r+=" "+o.slice(0,-1),n.push(r.trim()),r="",s=!1):n.push(o):s?r+=" "+o:n.push(o);return r&&n.push(r.trim()),n}var _=u(require("yargs")),D=require("yargs/helpers");var S="5.0.0";function N(){return(0,_.default)($((0,D.hideBin)(process.argv))).scriptName("lnv").showHelpOnFail(!1).version(S).usage("lnv <mode> [args]").alias("h","help").alias("v","version").option("run",{describe:"load runtime environment and run any scripts",type:"array",alias:"r"}).option("monorepo",{describe:"apply to packages in the monorepo.",type:"boolean",alias:"m"}).option("expose",{describe:"expose environment variables",alias:"e",type:"boolean"}).option("default",{describe:"the default environment (env|...|env.local) be loaded",alias:"d",type:"boolean"}).help()}var t=N().parse();async function M(){await P().catch(e=>{console.warn(`LNV Error: ${e.message}`),process.exit()})}async function P(){if(!t.e&&!t.r)throw new Error("Missing required --expose|-e or --run|-r options");if(t.m&&t.r)throw new Error("In monorepo, the run script cannot be run");if(t.e&&t.r)throw new Error("Expose and run cannot run simultaneously");let e=[t.d&&"env",...t._||[],t.d&&"local"],n=j(e).filter(Boolean).map(O);if(!n.length)throw new Error("Please enter lnv <modes> the loading mode");t.e&&!t.m&&n.splice(0,1);let r={},s=[];for(let c of n){let d=k(c);if(!d||d?.error){t.d&&(c==="env"||c==="env.local")||a.log(`Failed to loading ${c} file not found in all scopes`);continue}Object.assign(r,d.parsed),s.unshift(c)}let i=t.e?"exposed":"loaded",o=t.m?"packages by":"runtime environment",m=`Successfully ${i} ${s.join("|")} to ${o}`;t.r&&a.log(m),t.r&&await b(t.r,r),t.e&&await E(t.m,r),t.e&&a.don(m)}M();
