#!/usr/bin/env node
var _=Object.create;var m=Object.defineProperty;var N=Object.getOwnPropertyDescriptor;var F=Object.getOwnPropertyNames;var I=Object.getPrototypeOf,K=Object.prototype.hasOwnProperty;var P=(e,n,o,s)=>{if(n&&typeof n=="object"||typeof n=="function")for(let t of F(n))!K.call(e,t)&&t!==o&&m(e,t,{get:()=>n[t],enumerable:!(s=N(n,t))||s.enumerable});return e};var c=(e,n,o)=>(o=e!=null?_(I(e)):{},P(n||!e||!e.__esModule?m(o,"default",{value:e,enumerable:!0}):o,e));var i=c(require("pathe")),d=c(require("fs")),y=require("dotenv"),g=require("@manypkg/get-packages"),l=process.cwd();function u(e){return(0,y.config)({processEnv:{},path:a(e)}).parsed?.DOTENV_KEY}function a(e){let n=l;for(;n!==i.default.parse(n).root;){let o=i.default.join(n,e);if(d.default.existsSync(o))return o;n=i.default.dirname(n)}}function h(e,n={}){let s=["# This file is generated by lnv command","# DO NOT ATTEMPT TO EDIT THIS FILE",Object.entries(n).map(([t,S])=>`${t}=${S}`).join(`
`)].join(`
`);d.default.writeFileSync(e,s,"utf-8")}async function x(e={}){let{packages:n}=await(0,g.getPackages)(process.cwd());for(let o of n)console.log(` - ${i.default.relative(l,o.dir)}/.env`),h(`${o.dir}/.env`,e)}async function w(e={}){h(`${l}/.env`,e)}var b=c(require("yargs")),T=require("yargs/helpers");var E="3.3.0";function k(){return(0,b.default)((0,T.hideBin)(process.argv)).scriptName("lnv").showHelpOnFail(!1).version(E).usage("$0 <mode> [args]").alias("h","help").alias("v","version").option("run",{describe:"load runtime environment and run any scripts",type:"array",alias:"r",string:!0}).option("monorepo",{describe:"apply to packages in the monorepo.",type:"boolean",alias:"m"}).option("expose",{describe:"expose environment variables",alias:"e",type:"boolean"}).help().parse()}var f=require("dotenv"),j=require("child_process"),r=k();if(!r.monorepo&&!r._[0])throw new Error("Please enter lnv <mode> the loading mode");var v=r._[0]==="dotenv",$=r._[0],p=v?".env.vault":$?`.env.${$}`:".env",Y=r.monorepo?x:w,O=r.expose?r.monorepo?"packages by":".env":"runtime environment",D=v?`Successfully decrypted ${p} to ${O}`:`Successfully loaded ${p} to ${O}`;r.run?.length&&(D+=`
`);async function A(){let e=v?H():R();e.error?console.log(`Failed to load ${p}, searched upwards, but the file was not found`):console.log(D),r.run&&await M(r.run,e.parsed),r.expose&&await Y(e.parsed)}A();function R(){return(0,f.config)({path:a(p)})}function H(){let e=u(".env.key")||process.env.DOTENV_KEY||u(".env");if(!e)throw new Error("no DOTENV_KEY found in .env | .env.key or process.env");return(0,f.config)({DOTENV_KEY:e,path:a(".env.vault")})}async function M(e,n){Array.isArray(e)&&(e=e.join(" "));let o={stdio:"inherit",env:{...process.env,...n}};try{let{execaSync:s}=await import("execa");s(e,o)}catch{(0,j.execSync)(e,o)}}
